name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-backend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore server/SDV.BorderControl.API.csproj
    
    - name: Build
      run: dotnet build server/SDV.BorderControl.API.csproj --no-restore
    
    - name: Test
      run: dotnet test server/Tests/SDV.BorderControl.API.Tests.csproj --no-build --verbosity normal --collect:"XPlat Code Coverage"
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./server/Tests/TestResults/coverage.cobertura.xml
        flags: backend
        name: backend-coverage

  test-frontend:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: client/package-lock.json
    
    - name: Install dependencies
      run: |
        cd client
        npm ci
    
    - name: Lint
      run: |
        cd client
        npm run lint
    
    - name: Test
      run: |
        cd client
        npm run test -- --coverage --watch=false
    
    - name: Build
      run: |
        cd client
        npm run build

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
    
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v2
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  build-and-push:
    needs: [test-backend, test-frontend, security-scan]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push API image
      uses: docker/build-push-action@v5
      with:
        context: ./server
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/sdv-border-control-api:latest
          ${{ secrets.DOCKER_USERNAME }}/sdv-border-control-api:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Client image
      uses: docker/build-push-action@v5
      with:
        context: ./client
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/sdv-border-control-client:latest
          ${{ secrets.DOCKER_USERNAME }}/sdv-border-control-client:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Build and push Edge Simulator image
      uses: docker/build-push-action@v5
      with:
        context: ./edge-simulator
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/sdv-border-control-simulator:latest
          ${{ secrets.DOCKER_USERNAME }}/sdv-border-control-simulator:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Deploy to staging
      run: |
        echo "Deployment to staging environment would happen here"
        echo "This could include:"
        echo "- Kubernetes deployment"
        echo "- Docker Compose deployment"
        echo "- Cloud provider deployment"
    
    - name: Run integration tests
      run: |
        echo "Integration tests would run here"
        echo "This could include:"
        echo "- API endpoint tests"
        echo "- End-to-end tests"
        echo "- Performance tests"

